from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
# Sample data
X, y = [[1], [2], [3]], [2, 4, 5]

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()
# Train the model
model.fit(X_train, y_train)
# Make predictions
predictions = model.predict(X_test)
# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print(f'Mean Squared Error: {mse}')






import numpy as np
from sklearn.linear_model import LinearRegression
 import matplotlib.pyplot as plt
# Generate synthetic data 
np.random.seed(42)
 X = 2 * np.random.rand(100, 1)
 y = 4 + 3 * X + np.random.randn(100, 1)
 # Create a linear regression model
 model = LinearRegression() 
# Train the model 
model.fit(X, y) 
# Make predictions for new data 
X_new = np.array([[0], [2]]) 
predictions = model.predict(X_new)
 # Plot the data and the regression line 
plt.scatter(X, y, label='Training data’) 
plt.plot(X_new, predictions, 'r-', label='Linear Regression’) 
plt.xlabel('X’) 
plt.ylabel('y’) 
plt.legend() 
plt.show()
